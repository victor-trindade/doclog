# Generated by Django 5.1.5 on 2025-03-14 15:03

import app.models
import django.core.validators
import django.db.models.deletion
import localflavor.br.models
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('codigo', models.CharField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('cnpj', localflavor.br.models.BRCNPJField(help_text='CNPJ do Entregador', max_length=18, unique=True)),
                ('atividade', models.CharField(blank=True, max_length=255, null=True)),
                ('fundado_em', models.DateField()),
                ('porte', app.models.UpperCharField(max_length=50)),
                ('simples', models.BooleanField(default=False)),
                ('simei', models.BooleanField(default=False)),
                ('razao_social', app.models.UpperCharField(max_length=255)),
                ('logradouro', app.models.UpperCharField(max_length=255)),
                ('numero', models.CharField(blank=True, max_length=10, null=True)),
                ('complemento', app.models.UpperCharField(blank=True, max_length=255, null=True)),
                ('cep', models.CharField(max_length=10)),
                ('bairro', app.models.UpperCharField(max_length=100)),
                ('cidade', app.models.UpperCharField(max_length=100)),
                ('estado', app.models.UpperCharField(max_length=2)),
                ('status', app.models.UpperCharField(max_length=255, verbose_name='Situação cadastral')),
                ('criado_em', models.DateTimeField(auto_now_add=True, verbose_name='Data de criação')),
                ('atualizado_em', models.DateTimeField(auto_now=True, verbose_name='Data de atualização')),
            ],
            options={
                'verbose_name': 'Empresa',
                'verbose_name_plural': 'Empresas',
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='ativo')),
                ('uuid', models.CharField(blank=True, default=None, max_length=36, null=True, unique=True)),
                ('nome', models.CharField(max_length=255)),
                ('nacionalidade', models.CharField(max_length=100)),
                ('cpf', localflavor.br.models.BRCPFField(max_length=14, unique=True)),
                ('rg', models.CharField(max_length=15)),
                ('orgao_emissor', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('celular', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message='Celular inválido', regex='^\\+?\\d{1,4}?\\d{9,15}$')])),
                ('data_nascimento_prestador', models.DateField()),
                ('ticket', models.CharField(max_length=9)),
                ('origem', models.CharField(choices=[('indicacao_entregador', 'Indicação Entregador'), ('anuncio', 'Anúncios'), ('leads', 'Leads Entrego'), ('acao_campo', 'Ação de Campo'), ('reentrada', 'Reentrada D&G')], max_length=255)),
                ('motivo_contato', models.CharField(choices=[('nuvem_para_franquia', 'Nuvem para Franquia'), ('franquia_para_franquia', 'Franquia para Franquia'), ('novo_cadastro', 'Novo Cadastro')], max_length=255)),
                ('dt_franquia', models.DateField(blank=True, null=True, verbose_name='ingresso na Franquia')),
                ('obs_txt', models.TextField(blank=True, null=True, verbose_name='Observação')),
            ],
        ),
        migrations.CreateModel(
            name='Modal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Modal',
                'verbose_name_plural': 'Modal',
            },
        ),
        migrations.CreateModel(
            name='Praca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, unique=True)),
                ('uf', models.CharField(max_length=2)),
            ],
            options={
                'verbose_name': 'Praça',
                'verbose_name_plural': 'Praças',
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255, verbose_name='Raiz')),
                ('document_key', models.CharField(max_length=255, unique=True, verbose_name='Chave do documento')),
                ('status_document', models.CharField(choices=[('running', 'Em Andamento'), ('closed', 'Finalizado'), ('canceled', 'Cancelado')], default='running', max_length=20, verbose_name='Status do documento')),
                ('created_at', models.DateTimeField(verbose_name='Criado em')),
                ('deadline_at', models.DateTimeField(blank=True, null=True, verbose_name='Data limite')),
                ('status_final', models.CharField(blank=True, max_length=255, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contracts', to='app.company', verbose_name='Empresa')),
            ],
            options={
                'verbose_name': 'Contrato',
                'verbose_name_plural': 'Contratos',
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agencia', models.CharField(blank=True, max_length=4)),
                ('conta', models.CharField(blank=True, max_length=12)),
                ('digito', models.CharField(blank=True, max_length=1)),
                ('tipo', models.CharField(choices=[('sem_conta', 'Sem Conta'), ('corrente', 'Corrente'), ('poupanca', 'Poupança')], max_length=20)),
                ('banco', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contas', to='app.bank')),
                ('driver', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='conta_bancaria', to='app.driver')),
            ],
            options={
                'verbose_name': 'Conta Bancaria',
                'verbose_name_plural': 'Contas Bancarias',
            },
        ),
        migrations.CreateModel(
            name='DriverCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='motorista_atual', to='app.company')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='empresas_vinculadas', to='app.driver')),
            ],
            options={
                'unique_together': {('company',)},
            },
        ),
        migrations.AddField(
            model_name='driver',
            name='empresas',
            field=models.ManyToManyField(related_name='motorista', through='app.DriverCompany', to='app.company'),
        ),
        migrations.CreateModel(
            name='HistoricalCompany',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('cnpj', localflavor.br.models.BRCNPJField(db_index=True, help_text='CNPJ do Entregador', max_length=18)),
                ('atividade', models.CharField(blank=True, max_length=255, null=True)),
                ('fundado_em', models.DateField()),
                ('porte', app.models.UpperCharField(max_length=50)),
                ('simples', models.BooleanField(default=False)),
                ('simei', models.BooleanField(default=False)),
                ('razao_social', app.models.UpperCharField(max_length=255)),
                ('logradouro', app.models.UpperCharField(max_length=255)),
                ('numero', models.CharField(blank=True, max_length=10, null=True)),
                ('complemento', app.models.UpperCharField(blank=True, max_length=255, null=True)),
                ('cep', models.CharField(max_length=10)),
                ('bairro', app.models.UpperCharField(max_length=100)),
                ('cidade', app.models.UpperCharField(max_length=100)),
                ('estado', app.models.UpperCharField(max_length=2)),
                ('status', app.models.UpperCharField(max_length=255, verbose_name='Situação cadastral')),
                ('criado_em', models.DateTimeField(blank=True, editable=False, verbose_name='Data de criação')),
                ('atualizado_em', models.DateTimeField(blank=True, editable=False, verbose_name='Data de atualização')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Empresa',
                'verbose_name_plural': 'historical Empresas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='driver',
            name='modal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drivers', to='app.modal'),
        ),
        migrations.CreateModel(
            name='Signer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sign_as', models.CharField(max_length=255, verbose_name='Assinado por')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('conferred', 'Assinado'), ('declined', 'Recusado'), ('not_applicable', 'Não Aplicável')], default='pending', max_length=20)),
                ('signed_at', models.DateTimeField(blank=True, null=True, verbose_name='Assinatura em')),
                ('documentation', models.CharField(blank=True, max_length=255, null=True, verbose_name='Documento')),
                ('nome', models.CharField(blank=True, max_length=255, null=True)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signers', to='app.contract', verbose_name='Contrato')),
            ],
            options={
                'verbose_name': 'Signatario',
                'verbose_name_plural': 'Signatários',
            },
        ),
        migrations.CreateModel(
            name='Subpraca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('praca', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subpracas', to='app.praca')),
            ],
            options={
                'verbose_name': 'Sub-Praça',
                'verbose_name_plural': 'Sub-Praças',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDriver',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='ativo')),
                ('uuid', models.CharField(blank=True, db_index=True, default=None, max_length=36, null=True)),
                ('nome', models.CharField(max_length=255)),
                ('nacionalidade', models.CharField(max_length=100)),
                ('cpf', localflavor.br.models.BRCPFField(db_index=True, max_length=14)),
                ('rg', models.CharField(max_length=15)),
                ('orgao_emissor', models.CharField(max_length=50)),
                ('email', models.EmailField(db_index=True, max_length=254)),
                ('celular', models.CharField(db_index=True, max_length=15, validators=[django.core.validators.RegexValidator(message='Celular inválido', regex='^\\+?\\d{1,4}?\\d{9,15}$')])),
                ('data_nascimento_prestador', models.DateField()),
                ('ticket', models.CharField(max_length=9)),
                ('origem', models.CharField(choices=[('indicacao_entregador', 'Indicação Entregador'), ('anuncio', 'Anúncios'), ('leads', 'Leads Entrego'), ('acao_campo', 'Ação de Campo'), ('reentrada', 'Reentrada D&G')], max_length=255)),
                ('motivo_contato', models.CharField(choices=[('nuvem_para_franquia', 'Nuvem para Franquia'), ('franquia_para_franquia', 'Franquia para Franquia'), ('novo_cadastro', 'Novo Cadastro')], max_length=255)),
                ('dt_franquia', models.DateField(blank=True, null=True, verbose_name='ingresso na Franquia')),
                ('obs_txt', models.TextField(blank=True, null=True, verbose_name='Observação')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('modal', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='app.modal')),
                ('subpraca', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='app.subpraca')),
            ],
            options={
                'verbose_name': 'historical driver',
                'verbose_name_plural': 'historical drivers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='driver',
            name='subpraca',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drivers', to='app.subpraca'),
        ),
    ]
